apply plugin: 'com.android.application'

repositories {
    maven { url 'https://raw.githubusercontent.com/freezy/double-espresso/maven-repo' }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.0'

    androidTestCompile 'com.jakewharton.espresso:espresso:1.1-r4-patched'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.1'
}

android {
    compileSdkVersion 21
    buildToolsVersion "20.0.0"

    defaultConfig {
        applicationId "com.muller.uitest"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

String jarPath = rootDir.path + "/spoon-runner-1.1.2-jar-with-dependencies.jar"
String outputPath = buildDir.path + "/outputs"
String spoonOutputPath = outputPath + "/spoon/"
String apkOutputPath =  outputPath + "/apk/"
String apkPath = apkOutputPath + "app-debug-unaligned.apk"
String testApkPath = apkOutputPath + "app-debug-test-unaligned.apk"

//noinspection GroovyAssignabilityCheck
task spoon (dependsOn: ['assembleDebug', 'assembleDebugTest']) << {
    javaexec {
        main = '-jar';
        args = [jarPath, '--apk', apkPath, '--test-apk', testApkPath, '--sdk', getSdkDir(), '--output', spoonOutputPath]
    }
}

def getSdkDir() {
    def localProperties = new File(rootDir, "local.properties")

    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        def sdkDir = properties.getProperty('sdk.dir')

        return sdkDir
    }

    return ""
}

